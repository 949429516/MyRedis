"""
Django settings for MyRedis project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(x!=rp_j@gfhl$92$@-8h$ft4+u$(gx^*takph72^rjx-jc&6p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app01',
]

# 中间件添加
MIDDLEWARE = [
    #"django.middleware.cache.UpdateCacheMiddleware",# 必须在最上面
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #"django.middleware.cache.FetchFromCacheMiddleware",#必须在最下面
]

ROOT_URLCONF = 'MyRedis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyRedis.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'MyRedis',
        'USER': 'root',
        'PASSWORD': '19950811',
        'HOST': '127.0.0.1',
        'PORT': 3306,
    }
}

# redis 的配置文件
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",  # django的cache模块
        "LOCATION": "redis://127.0.0.1:6379/0",  # 远程redis的ip:端口/库
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",  # 默认redis客户端
            "CONNECTION_POOL_KWARGS": {"max_connections": 100},  # 最大连接数
            "PASSWORD": "root",
            "PICKLE_VERSION": -1,  # 指定pickle的序列化版本
            "SOCKET_CONNECT_TIMEOUT": 2,  # 单位秒。连接redis超时时间
            "SOCKET_TIMEOUT": 2,  # 单位秒，执行redis命令的超时时间
        }
    }
}
# 缓存存储session会话
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
# 使用的缓存别名（默认内存缓存）
SESSION_CACHE_ALIAS = 'default'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
